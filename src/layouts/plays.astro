---
import '@styles/plays.css';

const { lang } = Astro.props;

import program from '@data/afisha.json';
import dictionary from '@data/dictionary.json';

import plays from '@data/plays.json';

import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg}');

const PLAYS_ORDER = ['eop', 'n32', 'ts', 'dk', 'miks', 'op', 'pip', 'mik', 'kd'];

// plays.sort((play1, play2) => play1.alt_title[lang].toLowerCase().localeCompare(play2.alt_title[lang].toLowerCase(), lang));
program.sort((play1, play2) => Date.parse(play1.date + 'T' + play1.time) - Date.parse(play2.date + 'T' + play2.time));

let actualProgram = program.filter(performance => Date.parse(performance.date) >= Date.now());
---

<section class='section-plays'>
	<h1 class='section-title'>{dictionary.plays[lang]}</h1>
	<ul>
		{
			PLAYS_ORDER.map(play_sid => {
				let play = plays.find(item => item.suffix === play_sid);
				let performs = actualProgram.filter(performance => performance.play_sid === play.suffix);
				let isPremiere = performs && performs.length > 0 && performs.find(item => item.premiere);
				return (
					<li class='play-block hover-block hover-background'>
						<div class='play-block-image'>
							<Picture
								class:list={'image-wrapper-landscape black-white-filter'}
								src={images['/src/assets/' + play.posters.landscape]()}
								formats={['webp']}
								fallbackFormat='jpg'
								loading='eager'
								widths={[300, 420, 540, 640]}
								sizes={'(max-width: 360px) 300px, (max-width: 500px) 420px, (max-width: 640px) 540px, 640px'}
								quality='100'
								alt={play.alt_title[lang]}
							/>
						</div>
						<div class='play-block-info'>
							<div class='play-info-name'>
								{isPremiere && <div class='play-property-hot-notice'>{dictionary.premiere[lang]}</div>}
								<a class='stretch-link' href={`/${lang}/plays/${play.suffix}/`}>
									<h3 class='play-title'>{play.alt_title[lang]}</h3>
								</a>
							</div>
							<div class='play-info-author'>{play.author_full[lang]}</div>
							<div class='play-property label-before' data-label={dictionary.genre[lang] + ': '}>
								{play.genre[lang]}, {play.age}
							</div>
							<div class='play-property label-before' data-label={dictionary.language[lang] + ': '}>
								{play.lang[lang]}
							</div>
						</div>
					</li>
				);
			})
		}
	</ul>
</section>
