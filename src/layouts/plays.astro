---
import "@styles/plays.css"

const {lang} = Astro.props;

import programm from '@public_data/afisha.json'
import dictionary from '@data/dictionary.json'

import plays from '@data/plays.json'

import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg}');

const PLAYS_ORDER = [9, 1 , 4, 8, 5, 2, 6];

// plays.sort((play1, play2) => play1.alt_title[lang].toLowerCase().localeCompare(play2.alt_title[lang].toLowerCase(), lang));
programm.sort((play1, play2) => Date.parse(play1.date+"T"+play1.time) - Date.parse(play2.date+"T"+play2.time));

let actualProgramm = programm.filter(performance => Date.parse(performance.date) >= Date.now());

let playsWithGrouppedDatesMap = new Map();
actualProgramm.forEach(element => {
	if (!playsWithGrouppedDatesMap.has(element.play_id)) {
		playsWithGrouppedDatesMap.set(element.play_id, actualProgramm.filter(performance => performance.play_id === element.play_id));
	}
});
let playsWithGrouppedDatesArray = Array.from(playsWithGrouppedDatesMap, ([key, value]) => ({ key, value }));

---

<section class="section-plays">
  <h1 class="section-title">{dictionary.plays[lang]}</h1>
	{
		PLAYS_ORDER.map (play_id => {
			let play = plays.find(item => item.id === play_id);
			let performs = actualProgramm.filter(performance => performance.play_id == play.id);
			let isPremiere = (performs && performs.length>0 && performs[0].premiere);
			return (
				<div class="play-block hover-block hover-background">
					<div class="play-block-image">
						<Picture 
							class:list={'image-wrapper-landscape black-white-filter'} 
							src={images["/src/assets/" + play.posters.landscape]()} 
							formats={['webp']}
							fallbackFormat='jpg' 
							widths={[280, 400, 640]}
							sizes={'(max-width: 320px) 280px, (max-width: 660px) 640px, (max-width: 1300px) 400px, 640px'}
							alt={play.alt_title[lang]} />
					</div>
					<div class="play-block-info">
						<div class="play-info-name">
							{isPremiere && 
								<h4 class="play-property-hot-notice">{dictionary.premiere[lang]}</h4>
							}
							<a class="stretch-link" href={"/"+lang+"/plays/"+play.suffix}>
								<h3 class="play-title">{play.alt_title[lang]}</h3>
							</a>
						</div>
						<div class="play-info-author">{play.author_full[lang]}</div>
						<h4 class="play-property label-before" data-label={dictionary.genre[lang]+": "}>{play.genre[lang]}, {play.age}</h4>
						<h4 class="play-property label-before" data-label={dictionary.language[lang]+": "}>{play.lang[lang]}</h4>
					</div>
				</div>
			)
		})

	}
</section>
