---
const { lang } = Astro.props;

import dictionary from '@data/dictionary.json'
import theater from '@data/theater.json'

import '@styles/people.css'

import type { ImageMetadata } from 'astro'
import { Picture } from 'astro:assets'
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/people/*.{jpeg,jpg}');

---

<section class="team">
  <h1 class="section-title">{dictionary.menu_team[lang]}</h1>
  <ul class="people-table">
    {
      theater.team.map(actor_id => {
        let person = theater.people.find(actor => actor.id === actor_id);
        let nJobs = 0;
        let strJobs="";
        for (let job of person.jobs) {
          // skip job 'actor'/'actress', because it will be add to strJob at the end
          if (job === "actor" || job === "actress") continue;
          strJobs = strJobs + (nJobs ? ", " : "") + ( (nJobs && lang === "ru" )? dictionary[job][lang].toLowerCase() : dictionary[job][lang]);
          nJobs++;
        }
        // put job 'actor'/'actress' to the end of the string strJobs
        let strActorJob = person.jobs.find(job => (job === "actor" || job === "actress"));
        if (strActorJob) {
          strJobs = strJobs + (nJobs ? ", " : "") + ( (nJobs && lang === "ru" )? dictionary[strActorJob][lang].toLowerCase() : dictionary[strActorJob][lang]);
          nJobs++;
        }
        let hasPage = person.suffix ? true : false;

        return (
          <li class="person-card hover-block">
            <div class="person-photo">
              <Picture 
                class:list={'image-wrapper-landscape black-white-filter'} 
                src={images["/src/assets/people/" + person.photo]()} 
                formats={['webp']} 
                fallbackFormat="jpg"
                loading="eager"
                widths={[240,320]}
                sizes={'(max-width: 320px) 240px, 320px'}
                quality="100"
                alt={person.name[lang] + ' ' + person.surname[lang]} />
            </div>
            <div class="person-title font-opacity1 bold1">{strJobs}</div>
            <div class="person-name">{person.name[lang]} {person.surname[lang]}</div>
            {
              hasPage &&
              <a class="stretch-link" href={`/${lang}/theater/people/${person.suffix}/`}></a>
            }
          </li>
        )
      })
    }
    <li class="person-card"></li>
    <li class="person-card"></li>
    <li class="person-card"></li>
  </ul>
</section>
