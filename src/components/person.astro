---
const { lang, person_id } = Astro.props;

import dictionary from '@data/dictionary.json'
import theater from '@data/theater.json'
import plays from '@data/plays.json'

import '@styles/person.css'

import type { ImageMetadata } from 'astro'
import { Picture } from 'astro:assets'
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*/*.{jpeg,jpg,png,gif}');

const person = theater.people.find(item => item.id == person_id);

let nJobs = 0;
let strJobs="";
let strActorJob = (person.gender == 'f') ? dictionary.actress[lang] : dictionary.actor[lang];
if (person.jobs) {
  for (let job of person.jobs) {
    let thisJob = dictionary[job][lang];
    if (job == 'actor' || job == 'actress') thisJob = strActorJob;
    strJobs = strJobs + (nJobs ? ", " : "") + ( (nJobs && lang == "ru" )? thisJob.toLowerCase() : thisJob);
    nJobs++;
  }
}
else {
  strJobs = (person.gender == 'f') ? dictionary.actress[lang] : dictionary.actor[lang];
}

let playsRegie = plays.filter(play => {
  return play.creators.find(action => {
    let res = action.people.find(person_id => person_id == person.id);
    return (action.type == "regie" && res != undefined);
  })
});

let playsActor = [];
plays.filter(play => {
  let characters = play.characters.filter(character => {
    let res = character.actors.find(person_id => person_id == person.id);
    return (res != undefined);
  });
  if (characters && characters.length > 0) {
    let strCharacters = '';
    characters.forEach((character, i) => strCharacters = strCharacters + character.name[lang] + (i < (characters.length-1) ? ', ': ''));
    playsActor.push({play_name: play.title[lang], play_suffix: play.suffix, characters: strCharacters});
  }
  return characters && characters.length > 0;
});
// console.log(playsActor);


let isRegie = playsRegie && playsRegie.length > 0;
let isActor = theater.actors.find(person_id => person_id == person.id);

---

<section class="person">
  <h1 class="section-title">{person.name[lang]} {person.surname[lang]}</h1>
  {
    person.title &&
    <div class="person-title bold1 opacity1">{person.title[lang]}</div>
  }
  <div class="person-jobs opacity1">{strJobs}</div>
  <div class="flex">
    <div class="flex-item-photo">
      <div class="person-photo">
        <Picture 
          class:list={'image-wrapper-landscape'} 
          src={images["/src/assets/people/" + person.photo]()} 
          formats={['avif', 'webp']} 
          widths={[320]}
          sizes={'320px'}
          alt={person.name[lang] + ' ' + person.surname[lang]} />
      </div>
    </div>
    <div class="works flex-item-works">
      {
        isRegie &&
        <div class="job regie">
          <h3>{dictionary.regie_theater[lang]}</h3>
          <ul>
            {
              playsRegie.map(play => {
                return (
                  <li class="flex-job">
                    <div class="flex-job-left">{play.genre[lang]}</div>
                    <div class="flex-job-right">
                      <div>
                        <a class="play-link" href={"/"+lang+"/plays/play-"+play.suffix}>{play.title[lang]}</a>
                      </div>
                    </div>
                  </li>
                )
              })
            }
          </ul>
        </div>
      }

      {
        isRegie && isActor && <br>
      }

      {
        isActor &&
        <div class="job actor">
          <h3>{dictionary.rollen_theater[lang]}</h3>
          <ul>
            {
              playsActor.map(play => {
                return (
                  <li class="flex-job">
                    <div class="flex-job-left">{play.characters}</div>
                    <div class="flex-job-right">
                      <div>
                        <a class="play-link" href={"/"+lang+"/plays/play-"+play.play_suffix}>{play.play_name}</a>
                      </div>
                    </div>
                  </li>
                )
              })
            }
          </ul>
        </div>
      }

      </div>
  </div>

</section>