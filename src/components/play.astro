---

import "@styles/play.css"

const {lang, play_id} = Astro.props;

import theater from '@data/theater.json'
import dictionary from "@data/dictionary.json"

import plays_ru from '@data/plays_ru.json'
import plays_de from '@data/plays_de.json'

let plays = (lang === 'de') ? plays_de : plays_ru;
let thisPlay = plays.filter(play => play_id == play.id)[0];

import type { ImageMetadata } from 'astro'
import { Picture } from 'astro:assets'
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');

let strDuration;
if (thisPlay.length >= 60) strDuration = Math.trunc(thisPlay.length/60) + dictionary.hour_short[lang] + "\u00A0";
strDuration = strDuration + (thisPlay.length%60).toString().padStart(2, '0') + dictionary.minute_short[lang];
strDuration = strDuration + ", " + (thisPlay.break ? dictionary.break[lang] : dictionary.break_no[lang]);

---
<section class="play">
  <h1 class="play-title">{thisPlay.title.toUpperCase()}</h1>
  <div class="play-author">{thisPlay.author_full.toUpperCase()}</div>
  <div class="media_container">
    <div class="media">
      { thisPlay.trailer_embed &&
        <iframe class="trailer float"
          src={thisPlay.trailer_embed+"&rel=0&controls=2&hl="+lang.toUpperCase()} title="YouTube video player" 
          frameborder="0" 
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
          allowfullscreen></iframe>
      }
      { !thisPlay.trailer_embed &&
        <Picture 
          class:list={'image-wrapper-landscape float'} 
          src={images["/src/assets/" + thisPlay.posters.landscape_16_9]()} 
          formats={['avif', 'webp']} 
          widths={[280,640,1200]}
          sizes={'(max-width: 320px) 280px, (max-width: 660px) 640px, 1200px'}
          alt={thisPlay.alt_title} />
      } 
    </div>
    <div class="play-info">
			<h4 class="play-property label-before" data-label={dictionary.genre[lang]+": "}>{thisPlay.genre}, {thisPlay.age}</h4>
      <h4 class="play-property label-before" data-label={dictionary.language[lang]+": "}>{thisPlay.lang}</h4>
      <h4 class="play-property label-before" data-label={dictionary.duration[lang]+": "}>{strDuration}</h4>
    </div>
  </div>
  <br><br>
  <ul class="list"><h2>{dictionary.play_creators[lang].toUpperCase()}</h2></ul>
  {
    thisPlay.creators.map(creator => {
      return (
        <li class="list-item">
          <div class="list-item-left">
            <div>{dictionary[creator.type][lang]}</div>
          </div>
          <div class="list-item-right">
            {
              creator.people.map((person_id, i) => {
                let person = theater.people.filter(person => person.id == person_id);
                if (!person.length) {
                  console.log("PLAY: a person with id " + person_id + "isn't found !!!");
                  return;
                }
                if (person.length > 1) console.log("PLAY: MORE THAN ONE PERSON have THE SAME ID ["  + person_id + "] !!!");
                return person.map(_person => {
                  if (_person.suffix)
                    return (
                      <a class="person-link" href={"/"+lang+"/theater/team/"+_person.suffix}>
                        {_person.name[lang]} {_person.surname[lang]}
                      </a>
                    )
                  else
                    return (
                      <div>{_person.name[lang]} {_person.surname[lang]}</div>
                    )
                });
              })
            }
          </div>
        </li>
      )
    })
  }
  <br>
  <ul class="list"><h2>{dictionary.play_team[lang].toUpperCase()}</h2></ul>
  {
    thisPlay.characters.map(character => {
      return (
        <li class="list-item">
          <div class="list-item-left">
            <div>{character.name}</div>
            {character.description && 
              <div class="small-description">{character.description}</div>}
          </div>
          <div class="list-item-right">
            {
              character.actors.map((actor_id, i) => {
                let actor = theater.people.filter(person => person.id == actor_id);
                if (!actor.length) {
                  console.log("PLAY: an actor with id " + actor_id + "isn't found !!!");
                  return;
                }
                if (actor.length > 1) console.log("PLAY: MORE THAN ONE PERSON have THE SAME ID ["  + actor_id + "] !!!");
                return actor.map(_actor => {
                  return (
                    <a class="person-link" href={"/"+lang+"/theater/team/"+_actor.suffix}>{_actor.name[lang]} {_actor.surname[lang]}</a>
                  )
                });
              })
            }
          </div>
        </li>
      )
    })
  }
</section>
