---
import "@styles/swiper-bundle.min.css"
import "@styles/carusel_main.css"

const {lang} = Astro.props;

import program from '@public_data/afisha.json'
import dictionary from '@data/dictionary.json'
// import theater from '@data/theater.json'

import plays from '@data/plays.json'

import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg}');

program.sort((play1, play2) => Date.parse(play1.date+"T"+play1.time) - Date.parse(play2.date+"T"+play2.time));

let actualProgram = program.filter(performance => Date.parse(performance.date) >= Date.now());

// let playsWithGrouppedDatesMap = new Map();
// actualProgram.forEach(element => {
// 	if (!playsWithGrouppedDatesMap.has(element.play_id)) {
// 		playsWithGrouppedDatesMap.set(element.play_id, actualProgram.filter(performance => performance.play_id === element.play_id));
// 	}
// });
// let playsWithGrouppedDatesArray = Array.from(playsWithGrouppedDatesMap, ([key, value]) => ({ key, value }));


---
<script is:inline src="/js/swiper-bundle.min.js" defer></script>
<script>
  let swiper;
	document.addEventListener('DOMContentLoaded', () => {
    swiper = new Swiper('.swiper', {
      direction: 'horizontal',
      loop: true,
      slidesPerView: 'auto',
      spaceBetween: 200,
      watchOverflow: true,
      // grabCursor: true,
      speed: 900,
      centeredSlides: true,
    
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
      },

      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },

      keyboard: {
        enabled: true,
        onlyInViewport: true,
      },

      autoplay: {
        delay: 3500,
        disableOnInteraction: true,
      },
    
    });
	});
</script>

<div class="main-gallery">
  <div class:list={['main-gallery-position']} >
    <div class="swiper">
      <div class="swiper-wrapper">
        {
          plays.map(play => {
            if (play.id == 2) return;

            let perform = actualProgram.find(performance => performance.play_id == play.id);
            let isPremiere = (perform && perform.premiere);

            let languageLabel = dictionary.language[lang];
            if (lang === "ru") languageLabel = languageLabel.toLowerCase();
            return (
              <a class="swiper-slide" data-play={play.id} href={"/"+lang+"/plays/"+play.suffix} >
                <div class="carusel-play-card">
                  <div class="carusel-play-image">
                    <Picture 
                      class:list={'carusel-picture'} 
                      src={images["/src/assets/" + play.posters.portrait]()} 
                      formats={['webp']} 
                      fallbackFormat='jpg'
                      widths={[280, 400, 640]}
                      sizes={'(max-width: 320px) 280px, (max-width: 660px) 400px, 640px'}
                      quality="90"
                      alt={play.title[lang]} />
                  </div>
                  <div class="carusel-play-info">
                    {isPremiere && 
                      <div class="carusel-play-info-premiere">{dictionary.premiere[lang]}</div>
                    }
                    <div class="carusel-play-title">
                      {play.alt_title[lang]}
                      <!-- {pplay.alt_title_notice && <small><sup> ({play.alt_title_notice})</sup></small>}  -->
                    </div>
                    <div class="carusel-play-details">
                      {play.genre[lang]}, {play.age}<br>
                      {languageLabel}:&nbsp;{play.lang[lang]}
                    </div>
                  </div>
                </div>
              </a>
            );
          })
        }
      </div>

      <div class="swiper-pagination"></div>

      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    </div>
  </div>
</div>