---
import "@styles/font.css"
import "@styles/init.css"
import "@styles/antrepriza.css"
import "@styles/tickets.css"

const {lang} = Astro.props;

import prices from '@data/prices.json'
import programm from '@data/afisha.json'
import dictionary from '@data/dictionary.json'
import theater from '@data/theater.json'

import plays_ru from '@data/plays_ru.json'
import plays_de from '@data/plays_de.json'

let plays = (lang === 'de') ? plays_de : plays_ru; 

import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');

programm.sort((play1, play2) => Date.parse(play1.date+"T"+play1.time) - Date.parse(play2.date+"T"+play2.time));

const ONE_DAY: number = 24*60*60*1000;	

let actualProgramm = programm.filter(performance => Date.parse(performance.date) + ONE_DAY >= Date.now());
// let actualProgramm = programm;

let playsWithGrouppedDatesMap = new Map();
actualProgramm.forEach(element => {
	if (!playsWithGrouppedDatesMap.has(element.play_id)) {
		playsWithGrouppedDatesMap.set(element.play_id, actualProgramm.filter(performance => performance.play_id === element.play_id));
	}
});
let playsWithGrouppedDatesArray = Array.from(playsWithGrouppedDatesMap, ([key, value]) => ({ key, value }));

let giftTicketInfo = dictionary.giftticket_info[lang].replaceAll("{address}", theater.stageAddress);
for (let price of prices) {
	giftTicketInfo = giftTicketInfo.replaceAll("{" + price.type + "}", price.text_short[lang].toUpperCase());
}
// giftTicketInfo = giftTicketInfo.replaceAll("{br}", "\u000A");

---

<!-- 
<picture>
	<source srcset={AntreprizaLogo + "#logo-" + lang} type="image/svg+xml" media="(max-width: 570px)">
	<source srcset={AntreprizaLogo + "#logo-text-" + lang} type="image/svg+xml">
	<source srcset="logo_1x.png 1x, logo_2x.png 2x" media="(max-width: 570px)"> 
	<img class="picture-test" src="/src/assets/logo_text_1x_ru.png" srcset="/src/assets/logo_text_2x_ru.png 2x" alt="">
</picture>
-->

<section class="section-tickets">
{
	playsWithGrouppedDatesArray.map(item => {
		// console.log("key: " + item.key);
		let playInfo;
		plays.some((piece) => {
			if (item.key === piece.id) {
				playInfo = piece;
				return; 
			}
		} )

		if (playInfo) {
			return (
				<div id={playInfo.id_suffix} class="tickets-play-block hover-block" data-play={playInfo.id}>
					<div class="tickets-play-text">
						<div class="tickets-play-name">
							{item.value[0].premiere && 
								<h4 class="play-property-premiere">{dictionary.premiere[lang]}</h4>
							}
							<a class="stretch-link" href={"play-"+playInfo.id_suffix+".html"}>
								<h2 class="play-title">{playInfo.alt_title}</h2>
							</a>
						</div>
						<div class="tickets-play-info">
							<h4 class="play-property label-before" data-label={dictionary.genre[lang]+": "}>{playInfo.genre}, {playInfo.age}</h4>
							<h4 class="play-property label-before" data-label={dictionary.language[lang]+": "}>{playInfo.lang}</h4>
						</div>
						<div class="tickets-play-dates">
							<h4 class="notification-label">{dictionary.nextDates[lang]}:</h4>
							<div class="buttons-block">
								{
									item.value.map((play_date) => {
											let fullDate: string = play_date.date+'T'+play_date.time;
											let playDate: Date = new Date(fullDate);
											return (
												<button class="tickets-book-button" type="button" data-date={fullDate} data-play={playInfo.id}>
													{playDate.getDate().toString().padStart(2, '0')}.{(playDate.getMonth()+1).toString().padStart(2, '0')},
													{playDate.toLocaleDateString(lang, { weekday: 'short' })} / {play_date.time}
												</button>
											)
									} )
								}
							</div>
						</div>
					</div>
					<div class="tickets-play-image">
						<Picture 
							class:list={'image-wrapper-landscape black-white-filter'} 
							src={images["/src/assets/" + playInfo.posters.landscape]()} 
							formats={['avif', 'webp']} 
							widths={[280, 400, 640]}
							sizes={'(max-width: 320px) 280px, (max-width: 660px) 640px, (max-width: 1300px) 400px, 640px'}
							alt={playInfo.alt_title} />
					</div>
				</div>
			);
		}
	})
}

<div class="gift-block hover-block">
	<div class="gift-text">
		<h2 class="giftticket play-title">{dictionary.giftticket[lang]}</h2>
		<p class="gift-info">{giftTicketInfo}</p>
		<div class="flex-spreader"></div>
		<div class="giftticket buttons-block">
		{
			prices.map( price => {
				return (
					<button class="tickets-book-button" type="button" data-price={price.value}>{price.text_short[lang]}&nbsp;{price.value}€</button>
				);
			})
		}
		</div>
	</div>
	<div class="gift-image">
		<Picture 
			class:list={'image-wrapper-landscape black-white-filter'} 
			src={images["/src/assets/logo_red_landscape.png"]()} 
			formats={['avif', 'webp']} 
			widths={[280, 400, 640]}
			sizes={'(max-width: 320px) 280px, (max-width: 660px) 640px, (max-width: 1300px) 400px, 640px'}
			alt={dictionary.giftcard[lang]} />
	</div>
</div>

<div class="gift-block hover-block">
	<div class="gift-text">
		<h2 class="giftcard play-title">{dictionary.giftcard[lang]}</h2>
		<p class="gift-info">{dictionary.giftcard_info[lang]}</p>
		<div class="flex-spreader"></div>
		<div>
			<h4 class="notification-label">{dictionary.giftcard_prices[lang]}:</h4>
			<div class="giftcard buttons-block">
				<button class="tickets-book-button" type="button" data-price='5'>5€</button>
				<button class="tickets-book-button" type="button" data-price='10'>10€</button>
				<button class="tickets-book-button" type="button" data-price='15'>15€</button>
				<button class="tickets-book-button" type="button" data-price='30'>30€</button>
				<button class="tickets-book-button" type="button" data-price='50'>50€</button>
			</div>
		</div>
	</div>
	<div class="gift-image">
		<Picture 
			class:list={'image-wrapper-landscape black-white-filter'} 
			src={images["/src/assets/logo_red_landscape.png"]()} 
			formats={['avif', 'webp']} 
			widths={[280, 400, 640]}
			sizes={'(max-width: 320px) 280px, (max-width: 660px) 640px, (max-width: 1300px) 400px, 640px'}
			alt={dictionary.giftcard[lang]} />
	</div>
</div>

</section>


<script>
	const PLAYS = new Array(100).fill(0);

	let ticketBtns = document.getElementsByClassName('tickets-book-button');
	for (let btn of ticketBtns) {
		if (Date.parse(btn.getAttribute("data-date")) < Date.now()) {
			//(btn as HTMLElement).hidden = true;
			(btn as HTMLElement).disabled = true;
		}
		else {
			PLAYS[btn.getAttribute("data-play")]++;
			btn.addEventListener('click', (event) => {
				console.log("click: " + btn.getAttribute("data-date") + " " + btn.getAttribute("data-time"));
				// 
			})
		}
	}

	let playBolcks = document.getElementsByClassName('tickets-play-block');
	for (let block of playBolcks) {
		if (!PLAYS[block.getAttribute("data-play")])
			(block as HTMLElement).hidden = true;
	}

</script>
