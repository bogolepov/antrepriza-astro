---
import "@styles/font.css"
import "@styles/init.css"
import "@styles/antrepriza.css"
import "@styles/tickets.css"

const {lang} = Astro.props;

import programm from '@data/afisha.json'
import dictionary from '@data/dictionary.json'

import plays_ru from '@data/plays_ru.json'
import plays_de from '@data/plays_de.json'

let plays = (lang === 'de') ? plays_de : plays_ru; 

import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');

programm.sort((play1, play2) => Date.parse(play1.date+"T"+play1.time) - Date.parse(play2.date+"T"+play2.time));

let actualProgramm = programm.filter(performance => Date.parse(performance.date) >= Date.now());

let playsWithGrouppedDatesMap = new Map();
actualProgramm.forEach(element => {
	if (!playsWithGrouppedDatesMap.has(element.play_id)) {
		playsWithGrouppedDatesMap.set(element.play_id, actualProgramm.filter(performance => performance.play_id === element.play_id));
	}
});
// console.log(playsWithGrouppedDatesMap);
let playsWithGrouppedDatesArray = Array.from(playsWithGrouppedDatesMap, ([key, value]) => ({ key, value }));
console.log(playsWithGrouppedDatesArray);



let iMonth: number = -1;

---

<!-- 
<picture>
	<source srcset={AntreprizaLogo + "#logo-" + lang} type="image/svg+xml" media="(max-width: 570px)">
	<source srcset={AntreprizaLogo + "#logo-text-" + lang} type="image/svg+xml">
	<source srcset="logo_1x.png 1x, logo_2x.png 2x" media="(max-width: 570px)"> 
	<img class="picture-test" src="/src/assets/logo_text_1x_ru.png" srcset="/src/assets/logo_text_2x_ru.png 2x" alt="">
</picture>
-->

<section class="section-tickets">
	{
		playsWithGrouppedDatesArray.map(item => {
			// console.log("key: " + item.key);
			let playInfo;
			plays.some((piece) => {
				if (item.key === piece.id) {
					playInfo = piece;
					return; 
				}
			} )

			if (playInfo) {
				return (
					<a id={playInfo.id_suffix} class="tickets-play-block tickets-play-link" href={"play-"+playInfo.id_suffix+".html"}>
						<div class="tickets-play-text">
							<div class="tickets-play-name">
								{item.value[0].premiere && 
									<span class="tickets-premiere">{dictionary.premiere[lang]}</span>
								}
								<h2 class="tickets-play-title">{playInfo.title}</h2>
							</div>
							<div class="tickets-play-info">
								<h5><span class="tickets-genre-label">{dictionary.genre[lang]}:</span> {playInfo.genre}, {playInfo.age}</h5>
								<div class="tickets-book-buttons">
									{
										item.value.map((play_date) => 
											<button class="tickets-book-btn" type="button">{play_date.date}</button>
										)
									}
								</div>
							</div>
						</div>
						<div class="tickets-play-image">
							<Picture 
								class:list={'play-image'} 
								src={images["/src/assets/" + playInfo.posters.landscape]()} 
								formats={['avif', 'webp']} 
								widths={[280, 400, 640]}
								sizes={'(max-width: 320px) 280px, (max-width: 660px) 640px, (max-width: 1300px) 400px, 640px'}
								alt={playInfo.title} />
						</div>
					</a>
				);
			}
		})
}
</section>


<script>
	/*
	const PLAYS_IN_MONTH = new Array(12).fill(0);
	const ONE_DAY = 24*60*60*1000;	
	let playCards = document.getElementsByClassName('programm-play-block');
	for (let playCard of playCards) {
		if (Date.parse(playCard.getAttribute("data-date")) + ONE_DAY  < Date.now())
			(playCard as HTMLElement).hidden = true;
		else
			PLAYS_IN_MONTH[playCard.getAttribute("data-month")]++;
	}
	let monthElems = document.getElementsByClassName('programm-month');
	let iMonth;
	for (let month of monthElems) {
			iMonth = month.getAttribute("data-month");
			if (!PLAYS_IN_MONTH[iMonth])
				(month as HTMLElement).hidden = true;
		}
	 */

	let TicketBtns = document.getElementsByClassName('tickets-book-btn');
	// console.log(TicketBtns);
	for (let btn of TicketBtns) {
		console.log(btn);
		btn.addEventListener('click', (event) => {
  		event.stopPropagation();
  		// close popup
		})
	}


</script>
